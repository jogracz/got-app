{"version":3,"sources":["context/types.tsx","context/utils.tsx","context/AppContext.tsx","style/colors.tsx","pages/Main/components/PageSizes.tsx","pages/Main/components/TableNavigation.tsx","pages/Main/components/Cell.tsx","pages/Main/components/Row.tsx","pages/Main/components/GenderFilter.tsx","pages/Main/components/CultureFilter.tsx","pages/Main/components/TableHeader.tsx","pages/Main/components/CharactersTable.tsx","pages/Main/index.tsx","components/Loader.tsx","pages/House/components/Card.tsx","pages/House/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["URL","CHARACTERS_URL","HOUSES_URL","DEFAULT_CHARACTERS_URL","PAGE_SIZES","PREV","NEXT","FIRST","LAST","UNKNOWN","GENDER_FILTERS","ALL","MALE","FEMALE","getAliveValue","born","died","bornSplitted","split","diedSplitted","bornAt","diedAt","parseInt","getDyingAge","getCharacterName","name","aliases","length","aliasesConnected","join","prepareCharacter","apiCharacter","character","alive","gender","culture","allegiances","alliegances","map","a","url","urlSplitted","getHouseId","numberOfBooks","books","getLinks","links","linksObject","first","prev","next","last","forEach","string","key","link","defaultValue","filteredCharacters","house","pageSize","changePageSize","getHouse","cleanHouse","goToPage","changeGenderFilter","changeCultureFilter","AppContext","createContext","AppProvider","props","children","useState","characters","setCharacters","setFilteredCharacters","setHouse","setPageSize","setLinks","currentCharactersURL","setCurrentCharactersURL","genderFilter","setGenderFilter","cultureFilter","setCultureFilter","getCharacters","axios","then","response","newLinks","headers","data","catch","error","console","log","houseId","fetch","json","apiHouse","region","coatOfArms","words","titles","hasDiedOut","diedOut","hasOverlord","overlord","numberOfCadetBranches","cadetBranches","useEffect","filtered","filter","filterByGender","toLocaleLowerCase","includes","filterByCulture","value","newPageSize","type","selectedGender","searchedWord","Provider","useAppContext","useContext","white","grey","blue2","PageSizesWrapper","styled","div","PageSize","selected","PageSizes","size","onClick","NavigationWrapper","TableNavigation","TCell","td","unknown","Cell","k","Array","isArray","to","TRow","tr","even","Row","Object","entries","Select","select","GenderFilter","onChange","e","target","values","option","Input","input","CultureFilter","placeholder","THead","thead","TH","th","TableHeader","Table","table","TBody","tbody","CharactersTable","index","TableWrapper","Main","rotate","keyframes","LoaderWrapper","Loader","CardWrapper","Label","Value","Card","label","v","HouseWrapper","Header","InfoWrapper","House","useParams","AppWrapper","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4dadc41.chunk.js","sourcesContent":["// URLs\nexport const URL= 'https://anapioficeandfire.com/api'\nexport const CHARACTERS_URL = `${URL}/characters`\nexport const HOUSES_URL = `${URL}/houses`\nexport const DEFAULT_CHARACTERS_URL = `${CHARACTERS_URL}?page=1&pageSize=25`;\n\n// API LINK NAVIGATION\nexport const DEFAULT_PAGE_SIZE = 25;\nexport const MIN_PAGE_SIZE = 10;\nexport const MAX_PAGE_SIZE = 50;\nexport const PAGE_SIZES = [MIN_PAGE_SIZE, DEFAULT_PAGE_SIZE, MAX_PAGE_SIZE];\nexport const PREV = 'prev';\nexport const NEXT = 'next';\nexport const FIRST = 'first';\nexport const LAST = 'last';\nexport const DEFAULT_LINKS = {\n  first: DEFAULT_CHARACTERS_URL,\n  prev: DEFAULT_CHARACTERS_URL,\n  next: `${CHARACTERS_URL}?page=2&pageSize=25`,\n  last: `${CHARACTERS_URL}?page=10&pageSize=25`,\n}\n\n// ELSE\nexport const UNKNOWN = 'Unknown';\nexport const GENDER_FILTERS = {\n  ALL: 'All',\n  MALE: 'Male',\n  FEMALE: 'Female',\n  UNKNOWN: UNKNOWN\n}\n\n// INTERFACES\nexport interface ApiCharacter {\n  url: string\n  name: string\n  culture: string\n  born: string\n  died: string\n  titles: string[];\n  aliases: string[];\n  father: string\n  mother: string\n  spouse: string\n  allegiances: string[];\n  books: string[];\n  povBooks: string[];\n  tvSeries: string[];\n  playedBy: string[];\n  gender?: string;\n}\n\nexport interface Character {\n  character: string;\n  alive: boolean;\n  gender: string;\n  culture: string;\n  allegiances: number[];\n  numberOfBooks: number;\n}\nexport interface ApiHouse {\n  url: string;\n  name: string;\n  region: string;\n  coatOfArms: string;\n  words: string;\n  titles: string[];\n  seats: string[];\n  currentLord: string;\n  heir: string;\n  overlord: string;\n  founded: string;\n  founder: string;\n  diedOut: string;\n  ancestralWeapons: string;\n  cadetBranches: string;\n  swornMembers: string;\n}\n\nexport interface House {\n  name: string;\n  region: string;\n  coatOfArms: string;\n  words: string;\n  titles: string[] | string;\n  hasDiedOut: string;\n  hasOverlord: string;\n  numberOfCadetBranches: number;\n}\n\nexport interface Links {\n  first: string;\n  prev: string;\n  next: string;\n  last: string;\n}","import { UNKNOWN, ApiCharacter, ApiHouse, Character} from './types';\n\nconst getDyingAge = (born: string, died: string) => {\n  const bornSplitted = born.split(' ')\n  const diedSplitted = died.split(' ')\n  const bornAt = bornSplitted[0] === 'In' ? bornSplitted[1] : bornSplitted[0];\n  const diedAt = diedSplitted[0] === 'In' ? diedSplitted[1] : diedSplitted[0];\n  return parseInt(diedAt) - parseInt(bornAt);\n}\n\nconst getAliveValue = (born: string, died: string) => {\n  if (died === '') return 'Yes';\n  return `No, died at ${getDyingAge(born, died)} years old`;  \n}\n\nconst getCharacterName = (name: string, aliases: string[]) => {\n  if (aliases.length === 0) return name;\n  const aliasesConnected = aliases.join(', ')\n  if (!name) return aliasesConnected;\n  return `${name}, ${aliasesConnected}`;\n}\n\nconst getHouseId = (url: string) => {\n  const urlSplitted = url.split('/');\n  return urlSplitted[urlSplitted.length - 1];\n}\n\nconst getAlliegances = (alliegances: string[]) => {\n  if (alliegances.length === 0) return UNKNOWN;\n  const houseIdArray = alliegances.map(a => getHouseId(a));\n  return houseIdArray;\n}\n\nexport const prepareCharacter = (apiCharacter: ApiCharacter) => {\n  return {\n    character: getCharacterName(apiCharacter.name, apiCharacter.aliases),\n    alive: getAliveValue(apiCharacter.born, apiCharacter.died),\n    gender: apiCharacter.gender || UNKNOWN,\n    culture: apiCharacter.culture || UNKNOWN,\n    allegiances: getAlliegances(apiCharacter.allegiances),\n    numberOfBooks: apiCharacter.books.length,\n  }\n}\n\nexport const prepareHouse = (apiHouse: ApiHouse) => {\n  return {\n    name: apiHouse.name || UNKNOWN,\n    region: apiHouse.region || UNKNOWN,\n    coatOfArms: apiHouse.coatOfArms || UNKNOWN,\n    words: apiHouse.words || UNKNOWN,\n    titles: (apiHouse.titles.length > 0 && apiHouse.titles[0] !== '')? apiHouse.titles : UNKNOWN,\n    hasDiedOut: apiHouse.diedOut ? 'Yes' : 'No',\n    hasOverlord: apiHouse.overlord ? 'Yes' : 'No',\n    numberOfCadetBranches: apiHouse.cadetBranches.length,\n  }\n}\n\nexport const getLinks = (links: string) => {\n  if (!links) return [];\n  const linksObject: {[x: string]: string} = {\n    first: '',\n    prev: '',\n    next: '',\n    last: ''\n  }\n  const arrayOfLinks = links.split(',')\n  arrayOfLinks.forEach(string => {\n    const key = string.split(';')[1].split('\"')[1];\n    const link = string.split(';')[0].split('<')[1].split('>')[0];\n    linksObject[key] = link;\n  })\n  return linksObject;\n}\n\nexport const filterByGender = (characters: Character[], genderFilter: string) => {\n  return characters.filter(character => character.gender === genderFilter);\n}\n\nexport const filterByCulture = (characters: Character[], cultureFilter: string) => {\n  return characters.filter(\n    character => character.culture.toLocaleLowerCase().includes(\n      cultureFilter.toLocaleLowerCase()\n    )\n  )\n}","import React, { useState, createContext, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport {\n  DEFAULT_PAGE_SIZE,\n  FIRST,\n  NEXT,\n  PREV,\n  LAST,\n  DEFAULT_CHARACTERS_URL,\n  HOUSES_URL,\n  GENDER_FILTERS,\n  ApiCharacter,\n  Character,\n  ApiHouse,\n  House,\n} from './types';\nimport { prepareCharacter, prepareHouse, getLinks, filterByGender, filterByCulture } from './utils';\n\ninterface AppProviderValue {\n  filteredCharacters: Character[];\n  house: House | null;\n  pageSize: number;\n  changePageSize: (newPageSize: number) => void;\n  getHouse: (houseId: number) => void;\n  cleanHouse: () => void;\n  goToPage: (type: string) => void;\n  changeGenderFilter: (selectedGender: string) => void;\n  changeCultureFilter: (searchedWord: string) => void;\n}\n\nconst defaultValue: AppProviderValue = {\n  filteredCharacters: [],\n  house: null,\n  pageSize: DEFAULT_PAGE_SIZE,\n  changePageSize: () => null,\n  getHouse: () => null,\n  cleanHouse: () => null,\n  goToPage: () => null,\n  changeGenderFilter: () => null,\n  changeCultureFilter: () => null,\n}\n\nconst AppContext = createContext(defaultValue);\n\ninterface AppProviderProps {\n  children: any;\n}\n\nexport const AppProvider = (props: AppProviderProps) => {\n  const { children } = props;\n  const [characters, setCharacters] = useState<Character[]>([]);\n  const [filteredCharacters, setFilteredCharacters] = useState<Character[]>(characters);\n  const [house, setHouse] = useState<House | null>(null);\n  const [pageSize, setPageSize] = useState(DEFAULT_PAGE_SIZE);\n  const [links, setLinks] = useState<any>({});\n  const [currentCharactersURL, setCurrentCharactersURL] = useState(DEFAULT_CHARACTERS_URL)\n  const [genderFilter, setGenderFilter] = useState(GENDER_FILTERS.ALL)\n  const [cultureFilter, setCultureFilter] = useState('')\n\n  const getCharacters = async (currentCharactersURL: string) => {\n    axios(currentCharactersURL)\n    .then(response => {\n      const newLinks = getLinks(response.headers.link);\n      setLinks(newLinks);\n      return (response.data)\n    })\n    .then(data =>  setCharacters(\n      data.map((character: ApiCharacter) => prepareCharacter(character))\n    ))\n    .catch(error => console.log(error));\n  }\n\n  const getHouse = async (houseId: number) => {\n    const url = `${HOUSES_URL}/${houseId}`\n    fetch(url)\n      .then(response => response.json())\n      .then((data: ApiHouse) => setHouse(prepareHouse(data)))\n      .catch(error => console.log(error));\n  }\n\n  const cleanHouse = () => {\n    setHouse(null);\n  }\n\n  const goToPage = (type: string) => {\n    switch (type) {\n      case FIRST:\n        links[FIRST] && setCurrentCharactersURL(links[FIRST]);\n        break;\n      case PREV:\n        links[PREV] && setCurrentCharactersURL(links[PREV]);\n        break;\n      case NEXT:\n        links[NEXT] && setCurrentCharactersURL(links[NEXT]);\n        break;\n      case LAST:\n        links[LAST] && setCurrentCharactersURL(links[LAST]);\n        break;\n    }\n  }\n\n  const changePageSize = (newPageSize: number) => {\n    setPageSize(newPageSize);\n    setCurrentCharactersURL(`${currentCharactersURL.split('pageSize')[0]}pageSize=${newPageSize}`)\n  }\n\n  const changeGenderFilter = (selectedGender: string) => {\n    setGenderFilter(selectedGender)\n  }\n\n  const changeCultureFilter = (searchedWord: string) => {\n    setCultureFilter(searchedWord);\n  }\n\n  useEffect(() => {\n    if (genderFilter === GENDER_FILTERS.ALL && cultureFilter === '') {\n      setFilteredCharacters(characters);\n    } else {\n      let filtered = characters;\n      if (genderFilter !== GENDER_FILTERS.ALL ) {\n        filtered = filterByGender(filtered, genderFilter)\n      }\n      if (cultureFilter !== '') {\n        filtered = filterByCulture(filtered, cultureFilter);\n      }\n      setFilteredCharacters(filtered);\n    }\n  }, [characters, genderFilter, cultureFilter])\n\n  useEffect(() => {\n    const fetch = async (currentCharactersURL: string) => {\n      await getCharacters(currentCharactersURL);\n    }\n    fetch(currentCharactersURL);\n  }, [currentCharactersURL])\n\n  const value = {\n    filteredCharacters,\n    house,\n    pageSize,\n    changePageSize,\n    getHouse,\n    cleanHouse,\n    goToPage,\n    changeGenderFilter,\n    changeCultureFilter\n  }\n\n  return (\n    <AppContext.Provider value={value}>\n      {children}\n    </AppContext.Provider>\n  )\n}\n\nexport const useAppContext = () => useContext(AppContext);","export const black = '#000000FF';\nexport const white = '#eee';\nexport const blue= '#00A4CCFF';\nexport const orange = '#F95700FF';\n\nexport const mint = '#ADEFD1FF';\nexport const sailorBlue = '#00203FFF';\n\n\nexport const red = '#D9514EFF';\nexport const grey= '#2A2B2DFF';\nexport const blue2 = '#2DA8D8FF'","import React from 'react';\nimport styled from 'styled-components';\nimport { useAppContext } from '../../../context/AppContext';\nimport { PAGE_SIZES } from '../../../context/types';\n\nconst PageSizesWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  width: 200px;\n`\n\ninterface PageSizeProps {\n  selected: boolean;\n}\n\nconst PageSize = styled.div`\n  cursor: pointer;\n  opacity: ${(props: PageSizeProps) => props.selected ? 1 : 0.6};\n  font-size: ${(props: PageSizeProps) => props.selected ? '24px' : '18px'};\n  &:hover {\n    opacity: 1;\n  }\n`\n\nconst PageSizes = () => {\n  const { pageSize, changePageSize } = useAppContext();\n\n  return (\n    <PageSizesWrapper>\n        {PAGE_SIZES.map(size => (\n          <PageSize key={size} selected={pageSize === size} onClick={() => changePageSize(size)}>\n            {size}\n          </PageSize>\n      ))}\n    </PageSizesWrapper>\n  )\n}\n\nexport default PageSizes;","import React from 'react';\nimport styled from 'styled-components';\nimport { MdLastPage, MdFirstPage, MdNavigateBefore, MdNavigateNext } from 'react-icons/md';\nimport { useAppContext } from '../../../context/AppContext';\nimport { FIRST, NEXT, PREV, LAST }from '../../../context/types';\nimport { blue2, white } from '../../../style/colors';\nimport PageSizes from './PageSizes'\n\nconst NavigationWrapper = styled.div`\n  z-index: 10;\n  position: fixed;\n  width: 100%;\n  background-color: ${white};\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  color: ${blue2};\n  font-size: 30px;\n  svg {\n    opacity: 0.6;\n    cursor: pointer;\n    &:hover {\n      opacity: 1;\n    }\n  }\n`\n\nconst TableNavigation = () => {\n  const { goToPage } = useAppContext();\n  return (\n    <NavigationWrapper>\n      <MdFirstPage onClick={() => goToPage(FIRST)} />\n      <MdNavigateBefore onClick={() => goToPage(PREV)} />\n      <PageSizes />\n      <MdNavigateNext onClick={() => goToPage(NEXT)} />\n      <MdLastPage onClick={() => goToPage(LAST)} />\n    </NavigationWrapper>\n  )\n}\n\nexport default TableNavigation;","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport styled from 'styled-components';\nimport { UNKNOWN } from '../../../context/types';\n\ninterface CellProps {\n  k: string;\n  value: string | string[];\n}\n\ninterface TCellProps {\n  unknown: boolean;\n}\n\nexport const TCell = styled.td`\n  padding: 2px;\n  font-size: 10px;\n  height: 40px;\n  opacity: ${(props: TCellProps) => props.unknown ? 0.6 : 1};\n  text-align: center;\n  width: 70px;\n  @media(min-width: 800px) {\n    width: 180px;\n    padding: 10px;\n    font-size: 14px;\n  }\n`\n\nconst Cell = (props: CellProps) => {\n  const { k, value } = props;\n  \n  return (\n    <TCell unknown={value === UNKNOWN}>\n      {k === 'allegiances' && Array.isArray(value)\n        ? value.map((houseId: string) => (\n          <div key={houseId}>\n            <Link to={`/houses/${houseId}`}>{houseId}</Link>\n          </div>\n        ))\n        : value\n      }\n    </TCell>\n  )\n}\n\nexport default Cell;","import React from 'react';\nimport styled from 'styled-components';\nimport { Character } from '../../../context/types';\nimport { white } from '../../../style/colors';\nimport Cell from './Cell';\n\ninterface RowProps {\n  character: Character;\n  even: boolean;\n}\n\ninterface TRowProps {\n  even: boolean;\n}\n\nconst TRow = styled.tr`\n  background-color: ${(props: TRowProps) => props.even ? '#ddd' : white};\n`\n\nconst Row = (props: RowProps) => {\n  const { character, even } = props;\n\n  return (\n    <TRow even={even}>\n      {Object.entries(character).map(([key, value])=> (\n        <Cell key={key} k={key} value={value} />\n      ))}\n    </TRow>\n  )\n}\n\nexport default Row;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useAppContext } from '../../../context/AppContext';\nimport { GENDER_FILTERS } from '../../../context/types';\n\nconst Select = styled.select`\n  width: 100%;\n`\n\nconst GenderFilter = () => {\n  const { changeGenderFilter } = useAppContext();\n\n  return (\n    <Select defaultValue={GENDER_FILTERS.ALL} onChange={(e) => changeGenderFilter(e.target.value)}>\n      {Object.values(GENDER_FILTERS).map(option => <option value={option}>{option}</option>)}\n    </Select>\n  )\n}\n\nexport default GenderFilter;","import React from 'react';\nimport styled from 'styled-components';\nimport { useAppContext } from '../../../context/AppContext';\n\nconst Input = styled.input`\n  width: 100%;\n`\nconst CultureFilter = () => {\nconst { changeCultureFilter } = useAppContext();\n\n  return (\n    <Input\n      type='text'\n      placeholder='search'\n      onChange={(e) => changeCultureFilter(e.target.value)}\n    />\n  )\n}\n\nexport default CultureFilter;","import React from 'react';\nimport styled from 'styled-components';\nimport { white, blue2 } from '../../../style/colors';\nimport GenderFilter from './GenderFilter';\nimport CultureFilter from './CultureFilter';\n\nconst THead = styled.thead`\n  z-index: 10;\n  color: ${white};\n  background-color: ${blue2};\n  font-size: 10px;\n  position: fixed;\n  top: 50px;\n  @media(min-width: 800px) {\n    top: 90px;\n    font-size: 20px;\n  }\n`\nconst TH = styled.th`\n  font-weight: 400;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  width: 100px;\n  @media(min-width: 800px) {\n    width: 180px;\n  }\n`\n\nconst TableHeader = () => {\n  return (\n    <THead>\n      <tr>\n        <TH>Character</TH>\n        <TH>Alive</TH>\n        <TH>\n          Gender\n          <GenderFilter />\n        </TH>\n        <TH>\n          Culture\n          <CultureFilter />\n        </TH>\n        <TH>Allegiances</TH>\n        <TH># of books</TH>\n      </tr>\n  </THead>\n  )\n}\n\nexport default TableHeader;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Character } from '../../../context/types';\nimport Row from './Row';\nimport TableHeader from './TableHeader';\n\ninterface CharactersTableProps {\n  characters: Character[];\n}\n\nconst Table = styled.table`\n  padding-top: 105px;\n  width: 100%;\n  @media(min-width: 800px) {\n    padding-top: 110px;\n  }\n`\nconst TBody = styled.tbody`\n  padding-top: 350px;\n  @media(min-width: 800px) {\n    padding-top: 300px;\n  }\n`\n\nconst CharactersTable = (props: CharactersTableProps) => {\n  const { characters } = props;\n\n  return (\n    <Table>\n      <TableHeader />\n      {characters.length > 0 && (\n          <TBody>\n        {characters.map((character, index) => (\n          <Row key={index} character={character} even={index % 2 === 0} />\n        ))}\n      </TBody>\n      )}\n      \n    </Table>\n  )\n}\n\nexport default CharactersTable;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useAppContext } from '../../context/AppContext';\nimport TableNavigation from './components/TableNavigation';\nimport CharactersTable from './components/CharactersTable';\n\nconst TableWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 1100px;\n  display: flex;\n  justify-content: center;\n`\nconst Main = () => {\n  const { filteredCharacters } = useAppContext();\nconsole.log(filteredCharacters)\n  return (\n    <TableWrapper>\n      <TableNavigation />\n      <CharactersTable characters={filteredCharacters}/>\n    </TableWrapper>\n  )\n}\n\nexport default Main;\n","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { GiSpinningSword } from 'react-icons/gi';\nimport { blue2 } from '../style/colors';\n\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst LoaderWrapper = styled.div`\n  color: ${blue2};\n  width: 100%;\n  height: 300px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 40px;\n  svg {\n    width: 100px;\n    height: 100px;\n    animation: ${rotate} 0.5s linear infinite;\n  }\n`\n\nconst Loader = () => {\n  return (\n    <LoaderWrapper>\n      <GiSpinningSword />\n    </LoaderWrapper>\n  )\n}\n\nexport default Loader;","import React from 'react';\nimport styled from 'styled-components';\nimport { UNKNOWN } from '../../../context/types';\nimport { grey, white, blue2, orange} from '../../../style/colors';\n\ninterface CardProps {\n  label: string;\n  value: string | string[] | boolean | number;\n}\n\ninterface WrapperProps {\n  unknown: boolean\n}\nconst CardWrapper = styled.div`\n  opacity: ${(props: WrapperProps) => props.unknown ? 0.6 : 1};\n  background-color: ${blue2};\n  /* box-shadow: 4px 4px 12px ${orange}; */\n  padding: 15px;\n  margin: 20px;\n  width: 200px;\n  min-height: 200px;\n  border-radius: 3px;\n`\nconst Label = styled.div`\n  color: ${white};\n  font-weight: 600;\n  padding-bottom: 15px;\n`\nconst Value = styled.div`\n  color: ${grey};\n  font-weight: 400;\n`\n\nconst Card = (props: CardProps) => {\n  const {label, value} = props;\n  console.log(value);\n\n  return (\n    <CardWrapper unknown={value === UNKNOWN}>\n      <Label>{label}</Label>\n      <Value>{Array.isArray(value) ? value.map(v => <div>{v}</div>) : value}</Value>\n    </CardWrapper>\n  )\n}\n\nexport default Card;","import React, { useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { useParams } from 'react-router';\nimport styled from 'styled-components';\nimport { FiChevronsLeft } from 'react-icons/fi';\nimport { useAppContext } from '../../context/AppContext';\nimport { ParamTypes } from '../../App';\nimport Loader from '../../components/Loader';\nimport { blue2 } from '../../style/colors';\nimport Card from './components/Card';\n\nconst HouseWrapper = styled.div``\nconst Header = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding-bottom: 20px;\n  font-size: 20px;\n  text-align: center;\n  svg {\n    cursor: pointer;\n    color: ${blue2};\n    font-size: 30px;\n    margin-bottom: 20px;\n  }\n  font-weight: 700;\n  @media(min-width: 800px) {\n    flex-direction: row;\n    font-size: 26px;\n    margin-left: -30px;\n    padding-bottom: 30px;\n    svg {\n      position: relative;\n      left: -100px;\n      margin-top:10px;\n      margin-bottom: 0;\n    }\n  }\n`\nconst InfoWrapper = styled.div`\n  text-align: left;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  \n`\n\nconst House = () => {\n  const { houseId } = useParams<ParamTypes>();\n  const { getHouse, house, cleanHouse } = useAppContext();\n\n  useEffect(() => {\n    getHouse(parseInt(houseId));\n  }, [houseId, getHouse])\n\n  if (!house) {\n    return <Loader />\n  } else {\n    return (\n      <HouseWrapper>\n        <Header>\n          <Link to='/' onClick={cleanHouse}><FiChevronsLeft /></Link>\n          {house.name}\n        </Header>\n        <InfoWrapper>\n          <Card label={'Region'} value={house.region}/>\n          <Card label={'Coat of Arms'} value={house.coatOfArms}/>\n          <Card label={'Words'} value={house.words}/>\n          <Card label={'Titles'} value={house.titles}/>\n          <Card label={'Has Died Out'} value={house.hasDiedOut}/>\n          <Card label={'Has Overlord'} value={house.hasOverlord}/>\n          <Card label={'Number Of Cadet Branches'} value={house.numberOfCadetBranches}/>\n        </InfoWrapper>\n      </HouseWrapper>\n    )\n  }\n}\n\nexport default House;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport styled from 'styled-components';\nimport {AppProvider} from './context/AppContext';\nimport MainPage from './pages/Main';\nimport HousePage from './pages/House';\nimport { white, grey } from './style/colors';\n\nexport interface ParamTypes {\n  houseId: string;\n}\n\nconst AppWrapper = styled.div`\n  color: ${grey};\n  min-height: 100vh;\n  background-color: ${white};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  @media(min-width: 800px) {\n    padding: 50px;\n  }\n`\n\nconst App = () => {\n  return (\n    <AppProvider>\n      <Router>\n        <AppWrapper>\n          <Switch>\n            <Route path='/' exact>\n              <MainPage />\n            </Route>\n            <Route path='/houses/:houseId'>\n              <HousePage />\n            </Route>\n          </Switch>\n        </AppWrapper>\n      </Router>\n    </AppProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}